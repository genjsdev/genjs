name: Deploy to Env

on:
  push:
    branches:
      - prod
      - master
      - release
      - develop

jobs:
  build:

    runs-on: <%- github_workflow_job_os %>

    steps:
      - uses: actions/checkout@v2

      - name: Set Node.js
        uses: actions/setup-node@v1
        with:
          node-version: <%- typeof node_version_constraint === 'undefined' ? '14.x' : node_version_constraint %>
<% if ('undefined' !== typeof php_version) { -%>

      - name: Set PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '<%- php_version -%>'
<% if ('undefined' !== typeof php_tools) { -%>
          tools: <%- php_tools %>
<% } -%>
<% if ('undefined' !== typeof php_extensions) { -%>
          extensions: <%- php_extensions %>
<% } -%><% } -%>

      - name: Set NPM Registry identity
        uses: ohoareau/actions/npmrc-scope-authtoken-add@master
        with:
          scope: <%- npm_scope %>
          token: ${{secrets.<%- package_registry_secret_var -%>}}
          registry: <%- package_registry %>

      - name: Set Env from current Branch
        uses: ohoareau/actions/branch-to-env@master
        with:
          secrets: ${{toJson(secrets)}}
          branch: ${{github.base_ref}}

      - name: Install
        shell: 'script -q -e -c "bash {0}"'
        run: make install
        env:
          FORCE_COLOR: 3

      - name: Test
        shell: 'script -q -e -c "bash {0}"'
        run: make test
        env:
          FORCE_COLOR: 3
          CI: true

      - name: Add AWS Account Profile (default)
        uses: ohoareau/actions/aws-account-profile-add@master
        with:
          name: default
          aki: ${{secrets.AWS_DEPLOY_ACCOUNT_ACCESS_KEY_ID}}
          sak: ${{secrets.AWS_DEPLOY_ACCOUNT_SECRET_ACCESS_KEY}}

      - name: Add AWS Role Profile
        uses: ohoareau/actions/aws-role-profile-add@master
        with:
          name: <%- typeof github_aws_profile === 'undefined' ? `${project_prefix}-${project_name}-\${{env.env}}` : github_aws_profile %>
          source: default
          role: ${{env.AWS_DEPLOY_ACCOUNT_ROLE_ARN}}

      - name: Install Terraform (+ auth)
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: <%- typeof terraform_version === 'undefined' ? '0.13.5' : terraform_version %>
          cli_config_credentials_token: ${{secrets.TERRAFORM_CLOUD_API_TOKEN}}
          terraform_wrapper: false

      - name: Build (Pre-Provision)
        shell: 'script -q -e -c "bash {0}"'
        run: make build-pre-provision env=${{env.env}}
        env:
          FORCE_COLOR: 3
          CI: true

      - name: Provision
        shell: 'script -q -e -c "bash {0}"'
        run: make provision env=${{env.env}}
        env:
          FORCE_COLOR: 3
          CI: true

      - name: Fetch Infrastructure Env Config
        shell: 'script -q -e -c "bash {0}"'
        run: make outputs env=${{env.env}}
        env:
          FORCE_COLOR: 3
          CI: true

      - name: Build (Post-Provision)
        shell: 'script -q -e -c "bash {0}"'
        run: make build-post-provision env=${{env.env}}
        env:
          FORCE_COLOR: 3
          CI: true
          AWS_DEPLOY_ACCOUNT_ACCESS_KEY_ID: ${{secrets.AWS_DEPLOY_ACCOUNT_ACCESS_KEY_ID}}
          AWS_DEPLOY_ACCOUNT_SECRET_ACCESS_KEY: ${{secrets.AWS_DEPLOY_ACCOUNT_SECRET_ACCESS_KEY}}

      - name: Deploy
        shell: 'script -q -e -c "bash {0}"'
        run: make deploy env=${{env.env}}
        env:
          FORCE_COLOR: 3
          CI: true

      - name: Migrate
        shell: 'script -q -e -c "bash {0}"'
        run: make migrate env=${{env.env}}
        env:
          FORCE_COLOR: 3
          CI: true
